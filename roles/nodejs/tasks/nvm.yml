---
- name: Install dependencies
  sudo: yes
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - git
    - curl
    - build-essential
    - libssl-dev
  tags: nvm

- name: Install nvm 
  sudo: yes
  sudo_user: "{{ ansible_user_id }}"
  git: repo=https://github.com/creationix/nvm.git dest=~/.nvm version={{ nvm_version }}
  tags: nvm

- name: Source nvm in ~/.profile
  sudo: yes
  sudo_user: "{{ ansible_user_id }}"
  lineinfile: >
    dest=~/.profile
    line="source ~/.nvm/nvm.sh"
  tags: nvm

- name: Install {{ nvm_node_version }}
  shell: sudo -iu {{ ansible_user_id }} nvm install {{ nvm_node_version }}
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result. stdout"
  tags: nvm

- name: Check if {{ nvm_node_version }} is the default node version
  shell: sudo -iu {{ ansible_user_id }} nvm ls | grep -e 'default -> {{ nvm_node_version }}'
  register: nvm_check_default
  changed_when: False
  ignore_errors: True
  tags: nvm

- name: Set default node version to {{ nvm_node_version }}
  shell: sudo -iu {{ ansible_user_id }} nvm alias default {{ nvm_node_version }}
  when: nvm_check_default|failed
  tags: nvm

- name: Install Browserify
  shell: sudo -iu {{ ansible_user_id }} npm install browserify@{{ npm_browserify_version }} -g

- name: Install Forever
  shell: sudo -iu {{ ansible_user_id }} npm install forever@{{ npm_forever_version }} -g

- name: Install Initd Forever
  shell: sudo -iu {{ ansible_user_id }} npm install initd-forever@{{ npm_initdforever_version }} -g

- name: Install Express
  shell: sudo -iu {{ ansible_user_id }} npm install express@{{ npm_express_version }} --save

- name: Install Express Generator
  shell: sudo -iu {{ ansible_user_id }} npm install express-generator@{{ npm_express_generator }} -g

- name: Install Nodemon
  shell: sudo -iu {{ ansible_user_id }} npm install nodemon@{{ npm_nodemon_version }} -g

- name: Install Bower
  shell: sudo -iu {{ ansible_user_id }} npm install bower@{{ npm_bower_version }} -g

- name: Install Eslint
  shell: sudo -iu {{ ansible_user_id }} npm install eslint@{{ npm_eslint_version }} -g

- name: Install Eslint React Plugin
  shell: sudo -iu {{ ansible_user_id }} npm install eslint-plugin-react@{{ npm_eslint_plugin_react }} -g

- name: Add eslintrc config file to webapp root
  sudo: yes
  template: src=eslintrc dest=/home/{{ ansible_user_id }}/.eslintrc mode=0751

- name: "Install npm packages from package.json for pfl-webapp"
  shell: "/home/{{ ansible_user_id }}/.nvm/{{ nvm_node_version }}/bin/npm install"
  args:
    chdir: "{{ pfl_webapp_dir }}"

- name: create a log dir
  file: path={{ pfl_webapp_log_dir }} state=directory mode=0755

  #For starting the service, there is an ansible bug which might be fixed in 2.0.
  #http://stackoverflow.com/questions/30162528/ansible-service-restart-failed

- name: Add pfl-webapp init.d daemon script
  sudo: yes
  template: src=pfl-webapp.sh dest=/etc/init.d/pfl-webapp mode=0751

- name: Start the Node Webapp service
  sudo: yes
  shell: sudo service pfl-webapp start
